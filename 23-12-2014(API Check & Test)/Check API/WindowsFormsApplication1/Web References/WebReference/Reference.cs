//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace WindowsFormsApplication1.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SoapProvisioningSoap11Binding", Namespace="http://ws.apache.org/axis2")]
    public partial class SoapProvisioning : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback isExistingSubscriberUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback suspendAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSubscriberAutoRechargeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscriberPaymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAutoRechargeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCallingByPinOperationCompleted;
        
        private System.Threading.SendOrPostCallback suspendSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback userValidationOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDidOperationCompleted;
        
        private System.Threading.SendOrPostCallback mainOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPinFromSubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAccountByPinOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSubscriberDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkRemainBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback createIcfOperationCompleted;
        
        private System.Threading.SendOrPostCallback paymentOperationCompleted;
        
        private System.Threading.SendOrPostCallback passwordRetrivalOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountByLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkBasicAccInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback resumeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscriberRechargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSubscriberIcfOperationCompleted;
        
        private System.Threading.SendOrPostCallback resumeSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkRemainMinuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSubscriberDidOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSubscriberCdrOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkCdrOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechargeSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAccountByPinOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSubscriberBasicAccInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCallingOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSubscriberAutoRechargeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback activateSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountByLot2OperationCompleted;
        
        private System.Threading.SendOrPostCallback createSubscriberAccountByLotOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeIcfOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAccountByPinOperationCompleted;
        
        private System.Threading.SendOrPostCallback callback2OperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSubscriberRemainMinuteOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSubscriberAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAutoRechargeStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback activateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSip2SubscriberOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeSubscriberPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeDidOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCallingMap2IvrOperationCompleted;
        
        private System.Threading.SendOrPostCallback callbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDidOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSubscriberRemainBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkCallingExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback createCallingOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSubscriberDeptOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SoapProvisioning() {
            this.Url = global::WindowsFormsApplication1.Properties.Settings.Default.WindowsFormsApplication1_WebReference_SoapProvisioning;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event isExistingSubscriberUserCompletedEventHandler isExistingSubscriberUserCompleted;
        
        /// <remarks/>
        public event suspendAccountCompletedEventHandler suspendAccountCompleted;
        
        /// <remarks/>
        public event getSubscriberAutoRechargeStatusCompletedEventHandler getSubscriberAutoRechargeStatusCompleted;
        
        /// <remarks/>
        public event subscriberPaymentCompletedEventHandler subscriberPaymentCompleted;
        
        /// <remarks/>
        public event createDeptCompletedEventHandler createDeptCompleted;
        
        /// <remarks/>
        public event createSubscriberAccountCompletedEventHandler createSubscriberAccountCompleted;
        
        /// <remarks/>
        public event getAutoRechargeStatusCompletedEventHandler getAutoRechargeStatusCompleted;
        
        /// <remarks/>
        public event createCallingByPinCompletedEventHandler createCallingByPinCompleted;
        
        /// <remarks/>
        public event suspendSubscriberAccountCompletedEventHandler suspendSubscriberAccountCompleted;
        
        /// <remarks/>
        public event userValidationCompletedEventHandler userValidationCompleted;
        
        /// <remarks/>
        public event rechargeAccountCompletedEventHandler rechargeAccountCompleted;
        
        /// <remarks/>
        public event createDidCompletedEventHandler createDidCompleted;
        
        /// <remarks/>
        public event mainCompletedEventHandler mainCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event getPinFromSubscriberCompletedEventHandler getPinFromSubscriberCompleted;
        
        /// <remarks/>
        public event deleteAccountByPinCompletedEventHandler deleteAccountByPinCompleted;
        
        /// <remarks/>
        public event deleteSubscriberDeptCompletedEventHandler deleteSubscriberDeptCompleted;
        
        /// <remarks/>
        public event checkRemainBalanceCompletedEventHandler checkRemainBalanceCompleted;
        
        /// <remarks/>
        public event createIcfCompletedEventHandler createIcfCompleted;
        
        /// <remarks/>
        public event paymentCompletedEventHandler paymentCompleted;
        
        /// <remarks/>
        public event passwordRetrivalCompletedEventHandler passwordRetrivalCompleted;
        
        /// <remarks/>
        public event updateSubscriberAccountCompletedEventHandler updateSubscriberAccountCompleted;
        
        /// <remarks/>
        public event createAccountByLotCompletedEventHandler createAccountByLotCompleted;
        
        /// <remarks/>
        public event checkBasicAccInfoCompletedEventHandler checkBasicAccInfoCompleted;
        
        /// <remarks/>
        public event createAccountCompletedEventHandler createAccountCompleted;
        
        /// <remarks/>
        public event resumeAccountCompletedEventHandler resumeAccountCompleted;
        
        /// <remarks/>
        public event subscriberRechargeCompletedEventHandler subscriberRechargeCompleted;
        
        /// <remarks/>
        public event createSubscriberIcfCompletedEventHandler createSubscriberIcfCompleted;
        
        /// <remarks/>
        public event resumeSubscriberAccountCompletedEventHandler resumeSubscriberAccountCompleted;
        
        /// <remarks/>
        public event checkRemainMinuteCompletedEventHandler checkRemainMinuteCompleted;
        
        /// <remarks/>
        public event createSubscriberDidCompletedEventHandler createSubscriberDidCompleted;
        
        /// <remarks/>
        public event checkSubscriberCdrCompletedEventHandler checkSubscriberCdrCompleted;
        
        /// <remarks/>
        public event rechargeCompletedEventHandler rechargeCompleted;
        
        /// <remarks/>
        public event checkCdrCompletedEventHandler checkCdrCompleted;
        
        /// <remarks/>
        public event rechargeSubscriberAccountCompletedEventHandler rechargeSubscriberAccountCompleted;
        
        /// <remarks/>
        public event updateAccountByPinCompletedEventHandler updateAccountByPinCompleted;
        
        /// <remarks/>
        public event checkSubscriberBasicAccInfoCompletedEventHandler checkSubscriberBasicAccInfoCompleted;
        
        /// <remarks/>
        public event deleteCallingCompletedEventHandler deleteCallingCompleted;
        
        /// <remarks/>
        public event updateAccountCompletedEventHandler updateAccountCompleted;
        
        /// <remarks/>
        public event updateSubscriberAutoRechargeStatusCompletedEventHandler updateSubscriberAutoRechargeStatusCompleted;
        
        /// <remarks/>
        public event activateSubscriberAccountCompletedEventHandler activateSubscriberAccountCompleted;
        
        /// <remarks/>
        public event createAccountByLot2CompletedEventHandler createAccountByLot2Completed;
        
        /// <remarks/>
        public event createSubscriberAccountByLotCompletedEventHandler createSubscriberAccountByLotCompleted;
        
        /// <remarks/>
        public event removeIcfCompletedEventHandler removeIcfCompleted;
        
        /// <remarks/>
        public event createAccountByPinCompletedEventHandler createAccountByPinCompleted;
        
        /// <remarks/>
        public event callback2CompletedEventHandler callback2Completed;
        
        /// <remarks/>
        public event checkSubscriberRemainMinuteCompletedEventHandler checkSubscriberRemainMinuteCompleted;
        
        /// <remarks/>
        public event deleteSubscriberAccountCompletedEventHandler deleteSubscriberAccountCompleted;
        
        /// <remarks/>
        public event updateAutoRechargeStatusCompletedEventHandler updateAutoRechargeStatusCompleted;
        
        /// <remarks/>
        public event activateAccountCompletedEventHandler activateAccountCompleted;
        
        /// <remarks/>
        public event createSip2SubscriberCompletedEventHandler createSip2SubscriberCompleted;
        
        /// <remarks/>
        public event changeSubscriberPasswordCompletedEventHandler changeSubscriberPasswordCompleted;
        
        /// <remarks/>
        public event deleteDeptCompletedEventHandler deleteDeptCompleted;
        
        /// <remarks/>
        public event removeDidCompletedEventHandler removeDidCompleted;
        
        /// <remarks/>
        public event createCallingMap2IvrCompletedEventHandler createCallingMap2IvrCompleted;
        
        /// <remarks/>
        public event callbackCompletedEventHandler callbackCompleted;
        
        /// <remarks/>
        public event updateDidCompletedEventHandler updateDidCompleted;
        
        /// <remarks/>
        public event checkSubscriberRemainBalanceCompletedEventHandler checkSubscriberRemainBalanceCompleted;
        
        /// <remarks/>
        public event checkCallingExistsCompletedEventHandler checkCallingExistsCompleted;
        
        /// <remarks/>
        public event deleteAccountCompletedEventHandler deleteAccountCompleted;
        
        /// <remarks/>
        public event createCallingCompletedEventHandler createCallingCompleted;
        
        /// <remarks/>
        public event createSubscriberDeptCompletedEventHandler createSubscriberDeptCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:isExistingSubscriberUser", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void isExistingSubscriberUser([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool @return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("isExistingSubscriberUser", new object[] {
                        calling,
                        tag_no});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void isExistingSubscriberUserAsync(string calling, string tag_no) {
            this.isExistingSubscriberUserAsync(calling, tag_no, null);
        }
        
        /// <remarks/>
        public void isExistingSubscriberUserAsync(string calling, string tag_no, object userState) {
            if ((this.isExistingSubscriberUserOperationCompleted == null)) {
                this.isExistingSubscriberUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisExistingSubscriberUserOperationCompleted);
            }
            this.InvokeAsync("isExistingSubscriberUser", new object[] {
                        calling,
                        tag_no}, this.isExistingSubscriberUserOperationCompleted, userState);
        }
        
        private void OnisExistingSubscriberUserOperationCompleted(object arg) {
            if ((this.isExistingSubscriberUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isExistingSubscriberUserCompleted(this, new isExistingSubscriberUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:suspendAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string suspendAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("suspendAccount", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void suspendAccountAsync(string userName, string remark) {
            this.suspendAccountAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void suspendAccountAsync(string userName, string remark, object userState) {
            if ((this.suspendAccountOperationCompleted == null)) {
                this.suspendAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuspendAccountOperationCompleted);
            }
            this.InvokeAsync("suspendAccount", new object[] {
                        userName,
                        remark}, this.suspendAccountOperationCompleted, userState);
        }
        
        private void OnsuspendAccountOperationCompleted(object arg) {
            if ((this.suspendAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.suspendAccountCompleted(this, new suspendAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getSubscriberAutoRechargeStatus", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getSubscriberAutoRechargeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("getSubscriberAutoRechargeStatus", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getSubscriberAutoRechargeStatusAsync(string calling, string tag_no, string remark) {
            this.getSubscriberAutoRechargeStatusAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void getSubscriberAutoRechargeStatusAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.getSubscriberAutoRechargeStatusOperationCompleted == null)) {
                this.getSubscriberAutoRechargeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSubscriberAutoRechargeStatusOperationCompleted);
            }
            this.InvokeAsync("getSubscriberAutoRechargeStatus", new object[] {
                        calling,
                        tag_no,
                        remark}, this.getSubscriberAutoRechargeStatusOperationCompleted, userState);
        }
        
        private void OngetSubscriberAutoRechargeStatusOperationCompleted(object arg) {
            if ((this.getSubscriberAutoRechargeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSubscriberAutoRechargeStatusCompleted(this, new getSubscriberAutoRechargeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:subscriberPayment", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string subscriberPayment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string method, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("subscriberPayment", new object[] {
                        calling,
                        tag_no,
                        amount,
                        amountSpecified,
                        method,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void subscriberPaymentAsync(string calling, string tag_no, double amount, bool amountSpecified, string method, string remark) {
            this.subscriberPaymentAsync(calling, tag_no, amount, amountSpecified, method, remark, null);
        }
        
        /// <remarks/>
        public void subscriberPaymentAsync(string calling, string tag_no, double amount, bool amountSpecified, string method, string remark, object userState) {
            if ((this.subscriberPaymentOperationCompleted == null)) {
                this.subscriberPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscriberPaymentOperationCompleted);
            }
            this.InvokeAsync("subscriberPayment", new object[] {
                        calling,
                        tag_no,
                        amount,
                        amountSpecified,
                        method,
                        remark}, this.subscriberPaymentOperationCompleted, userState);
        }
        
        private void OnsubscriberPaymentOperationCompleted(object arg) {
            if ((this.subscriberPaymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscriberPaymentCompleted(this, new subscriberPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createDept", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createDept([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dept_code, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dept_name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createDept", new object[] {
                        userName,
                        dept_code,
                        dept_name,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createDeptAsync(string userName, string dept_code, string dept_name, string remark) {
            this.createDeptAsync(userName, dept_code, dept_name, remark, null);
        }
        
        /// <remarks/>
        public void createDeptAsync(string userName, string dept_code, string dept_name, string remark, object userState) {
            if ((this.createDeptOperationCompleted == null)) {
                this.createDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDeptOperationCompleted);
            }
            this.InvokeAsync("createDept", new object[] {
                        userName,
                        dept_code,
                        dept_name,
                        remark}, this.createDeptOperationCompleted, userState);
        }
        
        private void OncreateDeptOperationCompleted(object arg) {
            if ((this.createDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDeptCompleted(this, new createDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cosSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        password,
                        cos,
                        cosSpecified,
                        balance,
                        balanceSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createSubscriberAccountAsync(string calling, string tag_no, string password, int cos, bool cosSpecified, double balance, bool balanceSpecified, string remark) {
            this.createSubscriberAccountAsync(calling, tag_no, password, cos, cosSpecified, balance, balanceSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createSubscriberAccountAsync(string calling, string tag_no, string password, int cos, bool cosSpecified, double balance, bool balanceSpecified, string remark, object userState) {
            if ((this.createSubscriberAccountOperationCompleted == null)) {
                this.createSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("createSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        password,
                        cos,
                        cosSpecified,
                        balance,
                        balanceSpecified,
                        remark}, this.createSubscriberAccountOperationCompleted, userState);
        }
        
        private void OncreateSubscriberAccountOperationCompleted(object arg) {
            if ((this.createSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSubscriberAccountCompleted(this, new createSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAutoRechargeStatus", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getAutoRechargeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("getAutoRechargeStatus", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAutoRechargeStatusAsync(string userName, string remark) {
            this.getAutoRechargeStatusAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void getAutoRechargeStatusAsync(string userName, string remark, object userState) {
            if ((this.getAutoRechargeStatusOperationCompleted == null)) {
                this.getAutoRechargeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAutoRechargeStatusOperationCompleted);
            }
            this.InvokeAsync("getAutoRechargeStatus", new object[] {
                        userName,
                        remark}, this.getAutoRechargeStatusOperationCompleted, userState);
        }
        
        private void OngetAutoRechargeStatusOperationCompleted(object arg) {
            if ((this.getAutoRechargeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAutoRechargeStatusCompleted(this, new getAutoRechargeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createCallingByPin", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createCallingByPin([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tagNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool tagNoSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createCallingByPin", new object[] {
                        pin,
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createCallingByPinAsync(string pin, string calling, int tagNo, bool tagNoSpecified, string remark) {
            this.createCallingByPinAsync(pin, calling, tagNo, tagNoSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createCallingByPinAsync(string pin, string calling, int tagNo, bool tagNoSpecified, string remark, object userState) {
            if ((this.createCallingByPinOperationCompleted == null)) {
                this.createCallingByPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCallingByPinOperationCompleted);
            }
            this.InvokeAsync("createCallingByPin", new object[] {
                        pin,
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark}, this.createCallingByPinOperationCompleted, userState);
        }
        
        private void OncreateCallingByPinOperationCompleted(object arg) {
            if ((this.createCallingByPinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCallingByPinCompleted(this, new createCallingByPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:suspendSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string suspendSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("suspendSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void suspendSubscriberAccountAsync(string calling, string tag_no, string remark) {
            this.suspendSubscriberAccountAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void suspendSubscriberAccountAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.suspendSubscriberAccountOperationCompleted == null)) {
                this.suspendSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsuspendSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("suspendSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark}, this.suspendSubscriberAccountOperationCompleted, userState);
        }
        
        private void OnsuspendSubscriberAccountOperationCompleted(object arg) {
            if ((this.suspendSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.suspendSubscriberAccountCompleted(this, new suspendSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:userValidation", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string userValidation([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("userValidation", new object[] {
                        userName,
                        password,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void userValidationAsync(string userName, string password, string remark) {
            this.userValidationAsync(userName, password, remark, null);
        }
        
        /// <remarks/>
        public void userValidationAsync(string userName, string password, string remark, object userState) {
            if ((this.userValidationOperationCompleted == null)) {
                this.userValidationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserValidationOperationCompleted);
            }
            this.InvokeAsync("userValidation", new object[] {
                        userName,
                        password,
                        remark}, this.userValidationOperationCompleted, userState);
        }
        
        private void OnuserValidationOperationCompleted(object arg) {
            if ((this.userValidationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userValidationCompleted(this, new userValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:rechargeAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string rechargeAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cosSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("rechargeAccount", new object[] {
                        userName,
                        cos,
                        cosSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeAccountAsync(string userName, int cos, bool cosSpecified, string remark) {
            this.rechargeAccountAsync(userName, cos, cosSpecified, remark, null);
        }
        
        /// <remarks/>
        public void rechargeAccountAsync(string userName, int cos, bool cosSpecified, string remark, object userState) {
            if ((this.rechargeAccountOperationCompleted == null)) {
                this.rechargeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeAccountOperationCompleted);
            }
            this.InvokeAsync("rechargeAccount", new object[] {
                        userName,
                        cos,
                        cosSpecified,
                        remark}, this.rechargeAccountOperationCompleted, userState);
        }
        
        private void OnrechargeAccountOperationCompleted(object arg) {
            if ((this.rechargeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeAccountCompleted(this, new rechargeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createDid", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createDid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiryTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string did, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createDid", new object[] {
                        userName,
                        expiryTime,
                        did,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createDidAsync(string userName, string expiryTime, string did, string remark) {
            this.createDidAsync(userName, expiryTime, did, remark, null);
        }
        
        /// <remarks/>
        public void createDidAsync(string userName, string expiryTime, string did, string remark, object userState) {
            if ((this.createDidOperationCompleted == null)) {
                this.createDidOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDidOperationCompleted);
            }
            this.InvokeAsync("createDid", new object[] {
                        userName,
                        expiryTime,
                        did,
                        remark}, this.createDidOperationCompleted, userState);
        }
        
        private void OncreateDidOperationCompleted(object arg) {
            if ((this.createDidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDidCompleted(this, new createDidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:main", RequestNamespace="http://ws.apache.org/axis2", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void main([System.Xml.Serialization.XmlElementAttribute("s", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string[] s) {
            this.Invoke("main", new object[] {
                        s});
        }
        
        /// <remarks/>
        public void mainAsync(string[] s) {
            this.mainAsync(s, null);
        }
        
        /// <remarks/>
        public void mainAsync(string[] s, object userState) {
            if ((this.mainOperationCompleted == null)) {
                this.mainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmainOperationCompleted);
            }
            this.InvokeAsync("main", new object[] {
                        s}, this.mainOperationCompleted, userState);
        }
        
        private void OnmainOperationCompleted(object arg) {
            if ((this.mainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mainCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:changePassword", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string changePassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("changePassword", new object[] {
                        userName,
                        password,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string userName, string password, string remark) {
            this.changePasswordAsync(userName, password, remark, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string userName, string password, string remark, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        userName,
                        password,
                        remark}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPinFromSubscriber", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string getPinFromSubscriber([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling) {
            object[] results = this.Invoke("getPinFromSubscriber", new object[] {
                        calling});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPinFromSubscriberAsync(string calling) {
            this.getPinFromSubscriberAsync(calling, null);
        }
        
        /// <remarks/>
        public void getPinFromSubscriberAsync(string calling, object userState) {
            if ((this.getPinFromSubscriberOperationCompleted == null)) {
                this.getPinFromSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPinFromSubscriberOperationCompleted);
            }
            this.InvokeAsync("getPinFromSubscriber", new object[] {
                        calling}, this.getPinFromSubscriberOperationCompleted, userState);
        }
        
        private void OngetPinFromSubscriberOperationCompleted(object arg) {
            if ((this.getPinFromSubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPinFromSubscriberCompleted(this, new getPinFromSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteAccountByPin", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deleteAccountByPin([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pin) {
            object[] results = this.Invoke("deleteAccountByPin", new object[] {
                        pin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAccountByPinAsync(string pin) {
            this.deleteAccountByPinAsync(pin, null);
        }
        
        /// <remarks/>
        public void deleteAccountByPinAsync(string pin, object userState) {
            if ((this.deleteAccountByPinOperationCompleted == null)) {
                this.deleteAccountByPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAccountByPinOperationCompleted);
            }
            this.InvokeAsync("deleteAccountByPin", new object[] {
                        pin}, this.deleteAccountByPinOperationCompleted, userState);
        }
        
        private void OndeleteAccountByPinOperationCompleted(object arg) {
            if ((this.deleteAccountByPinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAccountByPinCompleted(this, new deleteAccountByPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteSubscriberDept", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deleteSubscriberDept([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dept_code, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("deleteSubscriberDept", new object[] {
                        calling,
                        tag_no,
                        dept_code,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSubscriberDeptAsync(string calling, string tag_no, string dept_code, string remark) {
            this.deleteSubscriberDeptAsync(calling, tag_no, dept_code, remark, null);
        }
        
        /// <remarks/>
        public void deleteSubscriberDeptAsync(string calling, string tag_no, string dept_code, string remark, object userState) {
            if ((this.deleteSubscriberDeptOperationCompleted == null)) {
                this.deleteSubscriberDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSubscriberDeptOperationCompleted);
            }
            this.InvokeAsync("deleteSubscriberDept", new object[] {
                        calling,
                        tag_no,
                        dept_code,
                        remark}, this.deleteSubscriberDeptOperationCompleted, userState);
        }
        
        private void OndeleteSubscriberDeptOperationCompleted(object arg) {
            if ((this.deleteSubscriberDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSubscriberDeptCompleted(this, new deleteSubscriberDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkRemainBalance", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkRemainBalance([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkRemainBalance", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkRemainBalanceAsync(string userName, string remark) {
            this.checkRemainBalanceAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void checkRemainBalanceAsync(string userName, string remark, object userState) {
            if ((this.checkRemainBalanceOperationCompleted == null)) {
                this.checkRemainBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckRemainBalanceOperationCompleted);
            }
            this.InvokeAsync("checkRemainBalance", new object[] {
                        userName,
                        remark}, this.checkRemainBalanceOperationCompleted, userState);
        }
        
        private void OncheckRemainBalanceOperationCompleted(object arg) {
            if ((this.checkRemainBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkRemainBalanceCompleted(this, new checkRemainBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createIcf", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createIcf([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string inCalled, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiryTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createIcf", new object[] {
                        userName,
                        inCalled,
                        outCalled1,
                        outCalled2,
                        outCalled3,
                        outCalled4,
                        outCalled5,
                        expiryTime,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createIcfAsync(string userName, string inCalled, string outCalled1, string outCalled2, string outCalled3, string outCalled4, string outCalled5, string expiryTime, string remark) {
            this.createIcfAsync(userName, inCalled, outCalled1, outCalled2, outCalled3, outCalled4, outCalled5, expiryTime, remark, null);
        }
        
        /// <remarks/>
        public void createIcfAsync(string userName, string inCalled, string outCalled1, string outCalled2, string outCalled3, string outCalled4, string outCalled5, string expiryTime, string remark, object userState) {
            if ((this.createIcfOperationCompleted == null)) {
                this.createIcfOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateIcfOperationCompleted);
            }
            this.InvokeAsync("createIcf", new object[] {
                        userName,
                        inCalled,
                        outCalled1,
                        outCalled2,
                        outCalled3,
                        outCalled4,
                        outCalled5,
                        expiryTime,
                        remark}, this.createIcfOperationCompleted, userState);
        }
        
        private void OncreateIcfOperationCompleted(object arg) {
            if ((this.createIcfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createIcfCompleted(this, new createIcfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:payment", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string payment([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double amount, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string method, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("payment", new object[] {
                        userName,
                        amount,
                        amountSpecified,
                        method,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void paymentAsync(string userName, double amount, bool amountSpecified, string method, string remark) {
            this.paymentAsync(userName, amount, amountSpecified, method, remark, null);
        }
        
        /// <remarks/>
        public void paymentAsync(string userName, double amount, bool amountSpecified, string method, string remark, object userState) {
            if ((this.paymentOperationCompleted == null)) {
                this.paymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpaymentOperationCompleted);
            }
            this.InvokeAsync("payment", new object[] {
                        userName,
                        amount,
                        amountSpecified,
                        method,
                        remark}, this.paymentOperationCompleted, userState);
        }
        
        private void OnpaymentOperationCompleted(object arg) {
            if ((this.paymentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.paymentCompleted(this, new paymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:passwordRetrival", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string passwordRetrival([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("passwordRetrival", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void passwordRetrivalAsync(string userName, string remark) {
            this.passwordRetrivalAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void passwordRetrivalAsync(string userName, string remark, object userState) {
            if ((this.passwordRetrivalOperationCompleted == null)) {
                this.passwordRetrivalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpasswordRetrivalOperationCompleted);
            }
            this.InvokeAsync("passwordRetrival", new object[] {
                        userName,
                        remark}, this.passwordRetrivalOperationCompleted, userState);
        }
        
        private void OnpasswordRetrivalOperationCompleted(object arg) {
            if ((this.passwordRetrivalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.passwordRetrivalCompleted(this, new passwordRetrivalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string updateSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cosSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("updateSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        cos,
                        cosSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateSubscriberAccountAsync(string calling, string tag_no, int cos, bool cosSpecified, string remark) {
            this.updateSubscriberAccountAsync(calling, tag_no, cos, cosSpecified, remark, null);
        }
        
        /// <remarks/>
        public void updateSubscriberAccountAsync(string calling, string tag_no, int cos, bool cosSpecified, string remark, object userState) {
            if ((this.updateSubscriberAccountOperationCompleted == null)) {
                this.updateSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("updateSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        cos,
                        cosSpecified,
                        remark}, this.updateSubscriberAccountOperationCompleted, userState);
        }
        
        private void OnupdateSubscriberAccountOperationCompleted(object arg) {
            if ((this.updateSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSubscriberAccountCompleted(this, new updateSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createAccountByLot", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createAccountByLot([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lot, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createAccountByLot", new object[] {
                        userName,
                        password,
                        lot,
                        balance,
                        balanceSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountByLotAsync(string userName, string password, string lot, double balance, bool balanceSpecified, string remark) {
            this.createAccountByLotAsync(userName, password, lot, balance, balanceSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createAccountByLotAsync(string userName, string password, string lot, double balance, bool balanceSpecified, string remark, object userState) {
            if ((this.createAccountByLotOperationCompleted == null)) {
                this.createAccountByLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountByLotOperationCompleted);
            }
            this.InvokeAsync("createAccountByLot", new object[] {
                        userName,
                        password,
                        lot,
                        balance,
                        balanceSpecified,
                        remark}, this.createAccountByLotOperationCompleted, userState);
        }
        
        private void OncreateAccountByLotOperationCompleted(object arg) {
            if ((this.createAccountByLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountByLotCompleted(this, new createAccountByLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkBasicAccInfo", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkBasicAccInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkBasicAccInfo", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkBasicAccInfoAsync(string userName, string remark) {
            this.checkBasicAccInfoAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void checkBasicAccInfoAsync(string userName, string remark, object userState) {
            if ((this.checkBasicAccInfoOperationCompleted == null)) {
                this.checkBasicAccInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckBasicAccInfoOperationCompleted);
            }
            this.InvokeAsync("checkBasicAccInfo", new object[] {
                        userName,
                        remark}, this.checkBasicAccInfoOperationCompleted, userState);
        }
        
        private void OncheckBasicAccInfoOperationCompleted(object arg) {
            if ((this.checkBasicAccInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkBasicAccInfoCompleted(this, new checkBasicAccInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cosSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createAccount", new object[] {
                        userName,
                        password,
                        cos,
                        cosSpecified,
                        balance,
                        balanceSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountAsync(string userName, string password, int cos, bool cosSpecified, double balance, bool balanceSpecified, string remark) {
            this.createAccountAsync(userName, password, cos, cosSpecified, balance, balanceSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createAccountAsync(string userName, string password, int cos, bool cosSpecified, double balance, bool balanceSpecified, string remark, object userState) {
            if ((this.createAccountOperationCompleted == null)) {
                this.createAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountOperationCompleted);
            }
            this.InvokeAsync("createAccount", new object[] {
                        userName,
                        password,
                        cos,
                        cosSpecified,
                        balance,
                        balanceSpecified,
                        remark}, this.createAccountOperationCompleted, userState);
        }
        
        private void OncreateAccountOperationCompleted(object arg) {
            if ((this.createAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountCompleted(this, new createAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:resumeAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string resumeAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("resumeAccount", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void resumeAccountAsync(string userName, string remark) {
            this.resumeAccountAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void resumeAccountAsync(string userName, string remark, object userState) {
            if ((this.resumeAccountOperationCompleted == null)) {
                this.resumeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresumeAccountOperationCompleted);
            }
            this.InvokeAsync("resumeAccount", new object[] {
                        userName,
                        remark}, this.resumeAccountOperationCompleted, userState);
        }
        
        private void OnresumeAccountOperationCompleted(object arg) {
            if ((this.resumeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resumeAccountCompleted(this, new resumeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:subscriberRecharge", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string subscriberRecharge([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string rechargePin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string rechargePassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("subscriberRecharge", new object[] {
                        calling,
                        tag_no,
                        rechargePin,
                        rechargePassword,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void subscriberRechargeAsync(string calling, string tag_no, string rechargePin, string rechargePassword, string remark) {
            this.subscriberRechargeAsync(calling, tag_no, rechargePin, rechargePassword, remark, null);
        }
        
        /// <remarks/>
        public void subscriberRechargeAsync(string calling, string tag_no, string rechargePin, string rechargePassword, string remark, object userState) {
            if ((this.subscriberRechargeOperationCompleted == null)) {
                this.subscriberRechargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscriberRechargeOperationCompleted);
            }
            this.InvokeAsync("subscriberRecharge", new object[] {
                        calling,
                        tag_no,
                        rechargePin,
                        rechargePassword,
                        remark}, this.subscriberRechargeOperationCompleted, userState);
        }
        
        private void OnsubscriberRechargeOperationCompleted(object arg) {
            if ((this.subscriberRechargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscriberRechargeCompleted(this, new subscriberRechargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createSubscriberIcf", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createSubscriberIcf([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string inCalled, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled4, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string outCalled5, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiryTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createSubscriberIcf", new object[] {
                        calling,
                        tag_no,
                        inCalled,
                        outCalled1,
                        outCalled2,
                        outCalled3,
                        outCalled4,
                        outCalled5,
                        expiryTime,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createSubscriberIcfAsync(string calling, string tag_no, string inCalled, string outCalled1, string outCalled2, string outCalled3, string outCalled4, string outCalled5, string expiryTime, string remark) {
            this.createSubscriberIcfAsync(calling, tag_no, inCalled, outCalled1, outCalled2, outCalled3, outCalled4, outCalled5, expiryTime, remark, null);
        }
        
        /// <remarks/>
        public void createSubscriberIcfAsync(string calling, string tag_no, string inCalled, string outCalled1, string outCalled2, string outCalled3, string outCalled4, string outCalled5, string expiryTime, string remark, object userState) {
            if ((this.createSubscriberIcfOperationCompleted == null)) {
                this.createSubscriberIcfOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubscriberIcfOperationCompleted);
            }
            this.InvokeAsync("createSubscriberIcf", new object[] {
                        calling,
                        tag_no,
                        inCalled,
                        outCalled1,
                        outCalled2,
                        outCalled3,
                        outCalled4,
                        outCalled5,
                        expiryTime,
                        remark}, this.createSubscriberIcfOperationCompleted, userState);
        }
        
        private void OncreateSubscriberIcfOperationCompleted(object arg) {
            if ((this.createSubscriberIcfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSubscriberIcfCompleted(this, new createSubscriberIcfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:resumeSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string resumeSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("resumeSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void resumeSubscriberAccountAsync(string calling, string tag_no, string remark) {
            this.resumeSubscriberAccountAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void resumeSubscriberAccountAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.resumeSubscriberAccountOperationCompleted == null)) {
                this.resumeSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnresumeSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("resumeSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark}, this.resumeSubscriberAccountOperationCompleted, userState);
        }
        
        private void OnresumeSubscriberAccountOperationCompleted(object arg) {
            if ((this.resumeSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.resumeSubscriberAccountCompleted(this, new resumeSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkRemainMinute", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkRemainMinute([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkRemainMinute", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkRemainMinuteAsync(string userName, string remark) {
            this.checkRemainMinuteAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void checkRemainMinuteAsync(string userName, string remark, object userState) {
            if ((this.checkRemainMinuteOperationCompleted == null)) {
                this.checkRemainMinuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckRemainMinuteOperationCompleted);
            }
            this.InvokeAsync("checkRemainMinute", new object[] {
                        userName,
                        remark}, this.checkRemainMinuteOperationCompleted, userState);
        }
        
        private void OncheckRemainMinuteOperationCompleted(object arg) {
            if ((this.checkRemainMinuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkRemainMinuteCompleted(this, new checkRemainMinuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createSubscriberDid", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createSubscriberDid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiryTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string did, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createSubscriberDid", new object[] {
                        calling,
                        tag_no,
                        expiryTime,
                        did,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createSubscriberDidAsync(string calling, string tag_no, string expiryTime, string did, string remark) {
            this.createSubscriberDidAsync(calling, tag_no, expiryTime, did, remark, null);
        }
        
        /// <remarks/>
        public void createSubscriberDidAsync(string calling, string tag_no, string expiryTime, string did, string remark, object userState) {
            if ((this.createSubscriberDidOperationCompleted == null)) {
                this.createSubscriberDidOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubscriberDidOperationCompleted);
            }
            this.InvokeAsync("createSubscriberDid", new object[] {
                        calling,
                        tag_no,
                        expiryTime,
                        did,
                        remark}, this.createSubscriberDidOperationCompleted, userState);
        }
        
        private void OncreateSubscriberDidOperationCompleted(object arg) {
            if ((this.createSubscriberDidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSubscriberDidCompleted(this, new createSubscriberDidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkSubscriberCdr", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] checkSubscriberCdr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string setupTimeFrom, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string setupTimeTo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkSubscriberCdr", new object[] {
                        calling,
                        tag_no,
                        setupTimeFrom,
                        setupTimeTo,
                        remark});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void checkSubscriberCdrAsync(string calling, string tag_no, string setupTimeFrom, string setupTimeTo, string remark) {
            this.checkSubscriberCdrAsync(calling, tag_no, setupTimeFrom, setupTimeTo, remark, null);
        }
        
        /// <remarks/>
        public void checkSubscriberCdrAsync(string calling, string tag_no, string setupTimeFrom, string setupTimeTo, string remark, object userState) {
            if ((this.checkSubscriberCdrOperationCompleted == null)) {
                this.checkSubscriberCdrOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSubscriberCdrOperationCompleted);
            }
            this.InvokeAsync("checkSubscriberCdr", new object[] {
                        calling,
                        tag_no,
                        setupTimeFrom,
                        setupTimeTo,
                        remark}, this.checkSubscriberCdrOperationCompleted, userState);
        }
        
        private void OncheckSubscriberCdrOperationCompleted(object arg) {
            if ((this.checkSubscriberCdrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSubscriberCdrCompleted(this, new checkSubscriberCdrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:recharge", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string recharge([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string rechargePin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string rechargePassword, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("recharge", new object[] {
                        userName,
                        rechargePin,
                        rechargePassword,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeAsync(string userName, string rechargePin, string rechargePassword, string remark) {
            this.rechargeAsync(userName, rechargePin, rechargePassword, remark, null);
        }
        
        /// <remarks/>
        public void rechargeAsync(string userName, string rechargePin, string rechargePassword, string remark, object userState) {
            if ((this.rechargeOperationCompleted == null)) {
                this.rechargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeOperationCompleted);
            }
            this.InvokeAsync("recharge", new object[] {
                        userName,
                        rechargePin,
                        rechargePassword,
                        remark}, this.rechargeOperationCompleted, userState);
        }
        
        private void OnrechargeOperationCompleted(object arg) {
            if ((this.rechargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeCompleted(this, new rechargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkCdr", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string[] checkCdr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string setupTimeFrom, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string setupTimeTo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkCdr", new object[] {
                        userName,
                        setupTimeFrom,
                        setupTimeTo,
                        remark});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void checkCdrAsync(string userName, string setupTimeFrom, string setupTimeTo, string remark) {
            this.checkCdrAsync(userName, setupTimeFrom, setupTimeTo, remark, null);
        }
        
        /// <remarks/>
        public void checkCdrAsync(string userName, string setupTimeFrom, string setupTimeTo, string remark, object userState) {
            if ((this.checkCdrOperationCompleted == null)) {
                this.checkCdrOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckCdrOperationCompleted);
            }
            this.InvokeAsync("checkCdr", new object[] {
                        userName,
                        setupTimeFrom,
                        setupTimeTo,
                        remark}, this.checkCdrOperationCompleted, userState);
        }
        
        private void OncheckCdrOperationCompleted(object arg) {
            if ((this.checkCdrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkCdrCompleted(this, new checkCdrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:rechargeSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string rechargeSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cosSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("rechargeSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        cos,
                        cosSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rechargeSubscriberAccountAsync(string calling, string tag_no, int cos, bool cosSpecified, string remark) {
            this.rechargeSubscriberAccountAsync(calling, tag_no, cos, cosSpecified, remark, null);
        }
        
        /// <remarks/>
        public void rechargeSubscriberAccountAsync(string calling, string tag_no, int cos, bool cosSpecified, string remark, object userState) {
            if ((this.rechargeSubscriberAccountOperationCompleted == null)) {
                this.rechargeSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechargeSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("rechargeSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        cos,
                        cosSpecified,
                        remark}, this.rechargeSubscriberAccountOperationCompleted, userState);
        }
        
        private void OnrechargeSubscriberAccountOperationCompleted(object arg) {
            if ((this.rechargeSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechargeSubscriberAccountCompleted(this, new rechargeSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateAccountByPin", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string updateAccountByPin(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string has_master, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string master_pin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string distributor_pin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lock_when_use, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string is_lock, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string status, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiry_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string abs_expiry_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string open_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string active_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string valid_period, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string is_transfer, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string roundup, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double org_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool org_balanceSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string min_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string warn_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lock_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string acc_type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lot, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ref_no, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calc_charge, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string no_alert_route2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ch_plan_sch_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string promo_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ivr_language, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_min_first, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_bal, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_dept, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string sms_notif, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_min, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string roam_plan, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string surcharge, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string free_second, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ci_remark, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string charge_mode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ref_code, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string cust_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string co_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ref_id_no, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string attn1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string phone1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string email1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string attn2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string phone2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string email2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string faxno, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string use_monthly_package, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string package_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string monthly_credit, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved6, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved7) {
            object[] results = this.Invoke("updateAccountByPin", new object[] {
                        pin,
                        has_master,
                        master_pin,
                        distributor_pin,
                        lock_when_use,
                        password,
                        is_lock,
                        status,
                        expiry_date,
                        abs_expiry_date,
                        open_date,
                        active_date,
                        valid_period,
                        is_transfer,
                        roundup,
                        balance,
                        balanceSpecified,
                        org_balance,
                        org_balanceSpecified,
                        min_balance,
                        warn_balance,
                        lock_id,
                        acc_type,
                        lot,
                        ref_no,
                        calc_charge,
                        no_alert_route2,
                        ch_plan_sch_name,
                        promo_balance,
                        ivr_language,
                        prompt_min_first,
                        prompt_bal,
                        prompt_dept,
                        sms_notif,
                        prompt_min,
                        roam_plan,
                        surcharge,
                        free_second,
                        ci_remark,
                        charge_mode,
                        ref_code,
                        cust_name,
                        co_name,
                        ref_id_no,
                        attn1,
                        phone1,
                        email1,
                        attn2,
                        phone2,
                        email2,
                        faxno,
                        address1,
                        address2,
                        address3,
                        address4,
                        remark,
                        use_monthly_package,
                        package_name,
                        monthly_credit,
                        reserved1,
                        reserved2,
                        reserved3,
                        reserved4,
                        reserved5,
                        reserved6,
                        reserved7});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateAccountByPinAsync(
                    string pin, 
                    string has_master, 
                    string master_pin, 
                    string distributor_pin, 
                    string lock_when_use, 
                    string password, 
                    string is_lock, 
                    string status, 
                    string expiry_date, 
                    string abs_expiry_date, 
                    string open_date, 
                    string active_date, 
                    string valid_period, 
                    string is_transfer, 
                    string roundup, 
                    double balance, 
                    bool balanceSpecified, 
                    double org_balance, 
                    bool org_balanceSpecified, 
                    string min_balance, 
                    string warn_balance, 
                    string lock_id, 
                    string acc_type, 
                    string lot, 
                    string ref_no, 
                    string calc_charge, 
                    string no_alert_route2, 
                    string ch_plan_sch_name, 
                    string promo_balance, 
                    string ivr_language, 
                    string prompt_min_first, 
                    string prompt_bal, 
                    string prompt_dept, 
                    string sms_notif, 
                    string prompt_min, 
                    string roam_plan, 
                    string surcharge, 
                    string free_second, 
                    string ci_remark, 
                    string charge_mode, 
                    string ref_code, 
                    string cust_name, 
                    string co_name, 
                    string ref_id_no, 
                    string attn1, 
                    string phone1, 
                    string email1, 
                    string attn2, 
                    string phone2, 
                    string email2, 
                    string faxno, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string remark, 
                    string use_monthly_package, 
                    string package_name, 
                    string monthly_credit, 
                    string reserved1, 
                    string reserved2, 
                    string reserved3, 
                    string reserved4, 
                    string reserved5, 
                    string reserved6, 
                    string reserved7) {
            this.updateAccountByPinAsync(pin, has_master, master_pin, distributor_pin, lock_when_use, password, is_lock, status, expiry_date, abs_expiry_date, open_date, active_date, valid_period, is_transfer, roundup, balance, balanceSpecified, org_balance, org_balanceSpecified, min_balance, warn_balance, lock_id, acc_type, lot, ref_no, calc_charge, no_alert_route2, ch_plan_sch_name, promo_balance, ivr_language, prompt_min_first, prompt_bal, prompt_dept, sms_notif, prompt_min, roam_plan, surcharge, free_second, ci_remark, charge_mode, ref_code, cust_name, co_name, ref_id_no, attn1, phone1, email1, attn2, phone2, email2, faxno, address1, address2, address3, address4, remark, use_monthly_package, package_name, monthly_credit, reserved1, reserved2, reserved3, reserved4, reserved5, reserved6, reserved7, null);
        }
        
        /// <remarks/>
        public void updateAccountByPinAsync(
                    string pin, 
                    string has_master, 
                    string master_pin, 
                    string distributor_pin, 
                    string lock_when_use, 
                    string password, 
                    string is_lock, 
                    string status, 
                    string expiry_date, 
                    string abs_expiry_date, 
                    string open_date, 
                    string active_date, 
                    string valid_period, 
                    string is_transfer, 
                    string roundup, 
                    double balance, 
                    bool balanceSpecified, 
                    double org_balance, 
                    bool org_balanceSpecified, 
                    string min_balance, 
                    string warn_balance, 
                    string lock_id, 
                    string acc_type, 
                    string lot, 
                    string ref_no, 
                    string calc_charge, 
                    string no_alert_route2, 
                    string ch_plan_sch_name, 
                    string promo_balance, 
                    string ivr_language, 
                    string prompt_min_first, 
                    string prompt_bal, 
                    string prompt_dept, 
                    string sms_notif, 
                    string prompt_min, 
                    string roam_plan, 
                    string surcharge, 
                    string free_second, 
                    string ci_remark, 
                    string charge_mode, 
                    string ref_code, 
                    string cust_name, 
                    string co_name, 
                    string ref_id_no, 
                    string attn1, 
                    string phone1, 
                    string email1, 
                    string attn2, 
                    string phone2, 
                    string email2, 
                    string faxno, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string remark, 
                    string use_monthly_package, 
                    string package_name, 
                    string monthly_credit, 
                    string reserved1, 
                    string reserved2, 
                    string reserved3, 
                    string reserved4, 
                    string reserved5, 
                    string reserved6, 
                    string reserved7, 
                    object userState) {
            if ((this.updateAccountByPinOperationCompleted == null)) {
                this.updateAccountByPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAccountByPinOperationCompleted);
            }
            this.InvokeAsync("updateAccountByPin", new object[] {
                        pin,
                        has_master,
                        master_pin,
                        distributor_pin,
                        lock_when_use,
                        password,
                        is_lock,
                        status,
                        expiry_date,
                        abs_expiry_date,
                        open_date,
                        active_date,
                        valid_period,
                        is_transfer,
                        roundup,
                        balance,
                        balanceSpecified,
                        org_balance,
                        org_balanceSpecified,
                        min_balance,
                        warn_balance,
                        lock_id,
                        acc_type,
                        lot,
                        ref_no,
                        calc_charge,
                        no_alert_route2,
                        ch_plan_sch_name,
                        promo_balance,
                        ivr_language,
                        prompt_min_first,
                        prompt_bal,
                        prompt_dept,
                        sms_notif,
                        prompt_min,
                        roam_plan,
                        surcharge,
                        free_second,
                        ci_remark,
                        charge_mode,
                        ref_code,
                        cust_name,
                        co_name,
                        ref_id_no,
                        attn1,
                        phone1,
                        email1,
                        attn2,
                        phone2,
                        email2,
                        faxno,
                        address1,
                        address2,
                        address3,
                        address4,
                        remark,
                        use_monthly_package,
                        package_name,
                        monthly_credit,
                        reserved1,
                        reserved2,
                        reserved3,
                        reserved4,
                        reserved5,
                        reserved6,
                        reserved7}, this.updateAccountByPinOperationCompleted, userState);
        }
        
        private void OnupdateAccountByPinOperationCompleted(object arg) {
            if ((this.updateAccountByPinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAccountByPinCompleted(this, new updateAccountByPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkSubscriberBasicAccInfo", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkSubscriberBasicAccInfo([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkSubscriberBasicAccInfo", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkSubscriberBasicAccInfoAsync(string calling, string tag_no, string remark) {
            this.checkSubscriberBasicAccInfoAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void checkSubscriberBasicAccInfoAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.checkSubscriberBasicAccInfoOperationCompleted == null)) {
                this.checkSubscriberBasicAccInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSubscriberBasicAccInfoOperationCompleted);
            }
            this.InvokeAsync("checkSubscriberBasicAccInfo", new object[] {
                        calling,
                        tag_no,
                        remark}, this.checkSubscriberBasicAccInfoOperationCompleted, userState);
        }
        
        private void OncheckSubscriberBasicAccInfoOperationCompleted(object arg) {
            if ((this.checkSubscriberBasicAccInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSubscriberBasicAccInfoCompleted(this, new checkSubscriberBasicAccInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteCalling", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deleteCalling([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tagNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool tagNoSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("deleteCalling", new object[] {
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCallingAsync(string calling, int tagNo, bool tagNoSpecified, string remark) {
            this.deleteCallingAsync(calling, tagNo, tagNoSpecified, remark, null);
        }
        
        /// <remarks/>
        public void deleteCallingAsync(string calling, int tagNo, bool tagNoSpecified, string remark, object userState) {
            if ((this.deleteCallingOperationCompleted == null)) {
                this.deleteCallingOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCallingOperationCompleted);
            }
            this.InvokeAsync("deleteCalling", new object[] {
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark}, this.deleteCallingOperationCompleted, userState);
        }
        
        private void OndeleteCallingOperationCompleted(object arg) {
            if ((this.deleteCallingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCallingCompleted(this, new deleteCallingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string updateAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cos, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cosSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("updateAccount", new object[] {
                        userName,
                        cos,
                        cosSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateAccountAsync(string userName, int cos, bool cosSpecified, string remark) {
            this.updateAccountAsync(userName, cos, cosSpecified, remark, null);
        }
        
        /// <remarks/>
        public void updateAccountAsync(string userName, int cos, bool cosSpecified, string remark, object userState) {
            if ((this.updateAccountOperationCompleted == null)) {
                this.updateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAccountOperationCompleted);
            }
            this.InvokeAsync("updateAccount", new object[] {
                        userName,
                        cos,
                        cosSpecified,
                        remark}, this.updateAccountOperationCompleted, userState);
        }
        
        private void OnupdateAccountOperationCompleted(object arg) {
            if ((this.updateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAccountCompleted(this, new updateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateSubscriberAutoRechargeStatus", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string updateSubscriberAutoRechargeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string status, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("updateSubscriberAutoRechargeStatus", new object[] {
                        calling,
                        tag_no,
                        status,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateSubscriberAutoRechargeStatusAsync(string calling, string tag_no, string status, string remark) {
            this.updateSubscriberAutoRechargeStatusAsync(calling, tag_no, status, remark, null);
        }
        
        /// <remarks/>
        public void updateSubscriberAutoRechargeStatusAsync(string calling, string tag_no, string status, string remark, object userState) {
            if ((this.updateSubscriberAutoRechargeStatusOperationCompleted == null)) {
                this.updateSubscriberAutoRechargeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSubscriberAutoRechargeStatusOperationCompleted);
            }
            this.InvokeAsync("updateSubscriberAutoRechargeStatus", new object[] {
                        calling,
                        tag_no,
                        status,
                        remark}, this.updateSubscriberAutoRechargeStatusOperationCompleted, userState);
        }
        
        private void OnupdateSubscriberAutoRechargeStatusOperationCompleted(object arg) {
            if ((this.updateSubscriberAutoRechargeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSubscriberAutoRechargeStatusCompleted(this, new updateSubscriberAutoRechargeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:activateSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activateSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("activateSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activateSubscriberAccountAsync(string calling, string tag_no, string remark) {
            this.activateSubscriberAccountAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void activateSubscriberAccountAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.activateSubscriberAccountOperationCompleted == null)) {
                this.activateSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("activateSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark}, this.activateSubscriberAccountOperationCompleted, userState);
        }
        
        private void OnactivateSubscriberAccountOperationCompleted(object arg) {
            if ((this.activateSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activateSubscriberAccountCompleted(this, new activateSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createAccountByLot2", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createAccountByLot2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string user_name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lot, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createAccountByLot2", new object[] {
                        user_name,
                        password,
                        tag_no,
                        lot,
                        balance,
                        balanceSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountByLot2Async(string user_name, string password, string tag_no, string lot, double balance, bool balanceSpecified, string remark) {
            this.createAccountByLot2Async(user_name, password, tag_no, lot, balance, balanceSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createAccountByLot2Async(string user_name, string password, string tag_no, string lot, double balance, bool balanceSpecified, string remark, object userState) {
            if ((this.createAccountByLot2OperationCompleted == null)) {
                this.createAccountByLot2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountByLot2OperationCompleted);
            }
            this.InvokeAsync("createAccountByLot2", new object[] {
                        user_name,
                        password,
                        tag_no,
                        lot,
                        balance,
                        balanceSpecified,
                        remark}, this.createAccountByLot2OperationCompleted, userState);
        }
        
        private void OncreateAccountByLot2OperationCompleted(object arg) {
            if ((this.createAccountByLot2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountByLot2Completed(this, new createAccountByLot2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createSubscriberAccountByLot", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createSubscriberAccountByLot([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lot, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createSubscriberAccountByLot", new object[] {
                        calling,
                        tag_no,
                        password,
                        lot,
                        balance,
                        balanceSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createSubscriberAccountByLotAsync(string calling, string tag_no, string password, string lot, double balance, bool balanceSpecified, string remark) {
            this.createSubscriberAccountByLotAsync(calling, tag_no, password, lot, balance, balanceSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createSubscriberAccountByLotAsync(string calling, string tag_no, string password, string lot, double balance, bool balanceSpecified, string remark, object userState) {
            if ((this.createSubscriberAccountByLotOperationCompleted == null)) {
                this.createSubscriberAccountByLotOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubscriberAccountByLotOperationCompleted);
            }
            this.InvokeAsync("createSubscriberAccountByLot", new object[] {
                        calling,
                        tag_no,
                        password,
                        lot,
                        balance,
                        balanceSpecified,
                        remark}, this.createSubscriberAccountByLotOperationCompleted, userState);
        }
        
        private void OncreateSubscriberAccountByLotOperationCompleted(object arg) {
            if ((this.createSubscriberAccountByLotCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSubscriberAccountByLotCompleted(this, new createSubscriberAccountByLotCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:removeIcf", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string removeIcf([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string inCalled, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("removeIcf", new object[] {
                        inCalled,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeIcfAsync(string inCalled, string remark) {
            this.removeIcfAsync(inCalled, remark, null);
        }
        
        /// <remarks/>
        public void removeIcfAsync(string inCalled, string remark, object userState) {
            if ((this.removeIcfOperationCompleted == null)) {
                this.removeIcfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveIcfOperationCompleted);
            }
            this.InvokeAsync("removeIcf", new object[] {
                        inCalled,
                        remark}, this.removeIcfOperationCompleted, userState);
        }
        
        private void OnremoveIcfOperationCompleted(object arg) {
            if ((this.removeIcfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeIcfCompleted(this, new removeIcfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createAccountByPin", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createAccountByPin(
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string has_master, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string master_pin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string distributor_pin, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lock_when_use, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string is_lock, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string status, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiry_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string abs_expiry_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string open_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string active_date, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string valid_period, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string is_transfer, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string roundup, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool balanceSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] double org_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool org_balanceSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string min_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string warn_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lock_id, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string acc_type, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string lot, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ref_no, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calc_charge, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string no_alert_route2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ch_plan_sch_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string promo_balance, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ivr_language, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_min_first, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_bal, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_dept, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string sms_notif, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string prompt_min, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string roam_plan, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string surcharge, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string free_second, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ci_remark, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string charge_mode, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ref_code, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string cust_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string co_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string ref_id_no, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string attn1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string phone1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string email1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string attn2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string phone2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string email2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string faxno, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string address4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string use_monthly_package, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string package_name, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string monthly_credit, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved1, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved2, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved3, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved4, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved5, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved6, 
                    [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved7) {
            object[] results = this.Invoke("createAccountByPin", new object[] {
                        pin,
                        has_master,
                        master_pin,
                        distributor_pin,
                        lock_when_use,
                        password,
                        is_lock,
                        status,
                        expiry_date,
                        abs_expiry_date,
                        open_date,
                        active_date,
                        valid_period,
                        is_transfer,
                        roundup,
                        balance,
                        balanceSpecified,
                        org_balance,
                        org_balanceSpecified,
                        min_balance,
                        warn_balance,
                        lock_id,
                        acc_type,
                        lot,
                        ref_no,
                        calc_charge,
                        no_alert_route2,
                        ch_plan_sch_name,
                        promo_balance,
                        ivr_language,
                        prompt_min_first,
                        prompt_bal,
                        prompt_dept,
                        sms_notif,
                        prompt_min,
                        roam_plan,
                        surcharge,
                        free_second,
                        ci_remark,
                        charge_mode,
                        ref_code,
                        cust_name,
                        co_name,
                        ref_id_no,
                        attn1,
                        phone1,
                        email1,
                        attn2,
                        phone2,
                        email2,
                        faxno,
                        address1,
                        address2,
                        address3,
                        address4,
                        remark,
                        use_monthly_package,
                        package_name,
                        monthly_credit,
                        reserved1,
                        reserved2,
                        reserved3,
                        reserved4,
                        reserved5,
                        reserved6,
                        reserved7});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createAccountByPinAsync(
                    string pin, 
                    string has_master, 
                    string master_pin, 
                    string distributor_pin, 
                    string lock_when_use, 
                    string password, 
                    string is_lock, 
                    string status, 
                    string expiry_date, 
                    string abs_expiry_date, 
                    string open_date, 
                    string active_date, 
                    string valid_period, 
                    string is_transfer, 
                    string roundup, 
                    double balance, 
                    bool balanceSpecified, 
                    double org_balance, 
                    bool org_balanceSpecified, 
                    string min_balance, 
                    string warn_balance, 
                    string lock_id, 
                    string acc_type, 
                    string lot, 
                    string ref_no, 
                    string calc_charge, 
                    string no_alert_route2, 
                    string ch_plan_sch_name, 
                    string promo_balance, 
                    string ivr_language, 
                    string prompt_min_first, 
                    string prompt_bal, 
                    string prompt_dept, 
                    string sms_notif, 
                    string prompt_min, 
                    string roam_plan, 
                    string surcharge, 
                    string free_second, 
                    string ci_remark, 
                    string charge_mode, 
                    string ref_code, 
                    string cust_name, 
                    string co_name, 
                    string ref_id_no, 
                    string attn1, 
                    string phone1, 
                    string email1, 
                    string attn2, 
                    string phone2, 
                    string email2, 
                    string faxno, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string remark, 
                    string use_monthly_package, 
                    string package_name, 
                    string monthly_credit, 
                    string reserved1, 
                    string reserved2, 
                    string reserved3, 
                    string reserved4, 
                    string reserved5, 
                    string reserved6, 
                    string reserved7) {
            this.createAccountByPinAsync(pin, has_master, master_pin, distributor_pin, lock_when_use, password, is_lock, status, expiry_date, abs_expiry_date, open_date, active_date, valid_period, is_transfer, roundup, balance, balanceSpecified, org_balance, org_balanceSpecified, min_balance, warn_balance, lock_id, acc_type, lot, ref_no, calc_charge, no_alert_route2, ch_plan_sch_name, promo_balance, ivr_language, prompt_min_first, prompt_bal, prompt_dept, sms_notif, prompt_min, roam_plan, surcharge, free_second, ci_remark, charge_mode, ref_code, cust_name, co_name, ref_id_no, attn1, phone1, email1, attn2, phone2, email2, faxno, address1, address2, address3, address4, remark, use_monthly_package, package_name, monthly_credit, reserved1, reserved2, reserved3, reserved4, reserved5, reserved6, reserved7, null);
        }
        
        /// <remarks/>
        public void createAccountByPinAsync(
                    string pin, 
                    string has_master, 
                    string master_pin, 
                    string distributor_pin, 
                    string lock_when_use, 
                    string password, 
                    string is_lock, 
                    string status, 
                    string expiry_date, 
                    string abs_expiry_date, 
                    string open_date, 
                    string active_date, 
                    string valid_period, 
                    string is_transfer, 
                    string roundup, 
                    double balance, 
                    bool balanceSpecified, 
                    double org_balance, 
                    bool org_balanceSpecified, 
                    string min_balance, 
                    string warn_balance, 
                    string lock_id, 
                    string acc_type, 
                    string lot, 
                    string ref_no, 
                    string calc_charge, 
                    string no_alert_route2, 
                    string ch_plan_sch_name, 
                    string promo_balance, 
                    string ivr_language, 
                    string prompt_min_first, 
                    string prompt_bal, 
                    string prompt_dept, 
                    string sms_notif, 
                    string prompt_min, 
                    string roam_plan, 
                    string surcharge, 
                    string free_second, 
                    string ci_remark, 
                    string charge_mode, 
                    string ref_code, 
                    string cust_name, 
                    string co_name, 
                    string ref_id_no, 
                    string attn1, 
                    string phone1, 
                    string email1, 
                    string attn2, 
                    string phone2, 
                    string email2, 
                    string faxno, 
                    string address1, 
                    string address2, 
                    string address3, 
                    string address4, 
                    string remark, 
                    string use_monthly_package, 
                    string package_name, 
                    string monthly_credit, 
                    string reserved1, 
                    string reserved2, 
                    string reserved3, 
                    string reserved4, 
                    string reserved5, 
                    string reserved6, 
                    string reserved7, 
                    object userState) {
            if ((this.createAccountByPinOperationCompleted == null)) {
                this.createAccountByPinOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAccountByPinOperationCompleted);
            }
            this.InvokeAsync("createAccountByPin", new object[] {
                        pin,
                        has_master,
                        master_pin,
                        distributor_pin,
                        lock_when_use,
                        password,
                        is_lock,
                        status,
                        expiry_date,
                        abs_expiry_date,
                        open_date,
                        active_date,
                        valid_period,
                        is_transfer,
                        roundup,
                        balance,
                        balanceSpecified,
                        org_balance,
                        org_balanceSpecified,
                        min_balance,
                        warn_balance,
                        lock_id,
                        acc_type,
                        lot,
                        ref_no,
                        calc_charge,
                        no_alert_route2,
                        ch_plan_sch_name,
                        promo_balance,
                        ivr_language,
                        prompt_min_first,
                        prompt_bal,
                        prompt_dept,
                        sms_notif,
                        prompt_min,
                        roam_plan,
                        surcharge,
                        free_second,
                        ci_remark,
                        charge_mode,
                        ref_code,
                        cust_name,
                        co_name,
                        ref_id_no,
                        attn1,
                        phone1,
                        email1,
                        attn2,
                        phone2,
                        email2,
                        faxno,
                        address1,
                        address2,
                        address3,
                        address4,
                        remark,
                        use_monthly_package,
                        package_name,
                        monthly_credit,
                        reserved1,
                        reserved2,
                        reserved3,
                        reserved4,
                        reserved5,
                        reserved6,
                        reserved7}, this.createAccountByPinOperationCompleted, userState);
        }
        
        private void OncreateAccountByPinOperationCompleted(object arg) {
            if ((this.createAccountByPinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAccountByPinCompleted(this, new createAccountByPinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:callback2", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string callback2([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string called, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string setupTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int asId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool asIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int cbAsId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool cbAsIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flowAsId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool flowAsIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string codecList) {
            object[] results = this.Invoke("callback2", new object[] {
                        userName,
                        calling,
                        called,
                        setupTime,
                        asId,
                        asIdSpecified,
                        cbAsId,
                        cbAsIdSpecified,
                        flowAsId,
                        flowAsIdSpecified,
                        remark,
                        codecList});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void callback2Async(string userName, string calling, string called, string setupTime, int asId, bool asIdSpecified, int cbAsId, bool cbAsIdSpecified, int flowAsId, bool flowAsIdSpecified, string remark, string codecList) {
            this.callback2Async(userName, calling, called, setupTime, asId, asIdSpecified, cbAsId, cbAsIdSpecified, flowAsId, flowAsIdSpecified, remark, codecList, null);
        }
        
        /// <remarks/>
        public void callback2Async(string userName, string calling, string called, string setupTime, int asId, bool asIdSpecified, int cbAsId, bool cbAsIdSpecified, int flowAsId, bool flowAsIdSpecified, string remark, string codecList, object userState) {
            if ((this.callback2OperationCompleted == null)) {
                this.callback2OperationCompleted = new System.Threading.SendOrPostCallback(this.Oncallback2OperationCompleted);
            }
            this.InvokeAsync("callback2", new object[] {
                        userName,
                        calling,
                        called,
                        setupTime,
                        asId,
                        asIdSpecified,
                        cbAsId,
                        cbAsIdSpecified,
                        flowAsId,
                        flowAsIdSpecified,
                        remark,
                        codecList}, this.callback2OperationCompleted, userState);
        }
        
        private void Oncallback2OperationCompleted(object arg) {
            if ((this.callback2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callback2Completed(this, new callback2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkSubscriberRemainMinute", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkSubscriberRemainMinute([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkSubscriberRemainMinute", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkSubscriberRemainMinuteAsync(string calling, string tag_no, string remark) {
            this.checkSubscriberRemainMinuteAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void checkSubscriberRemainMinuteAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.checkSubscriberRemainMinuteOperationCompleted == null)) {
                this.checkSubscriberRemainMinuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSubscriberRemainMinuteOperationCompleted);
            }
            this.InvokeAsync("checkSubscriberRemainMinute", new object[] {
                        calling,
                        tag_no,
                        remark}, this.checkSubscriberRemainMinuteOperationCompleted, userState);
        }
        
        private void OncheckSubscriberRemainMinuteOperationCompleted(object arg) {
            if ((this.checkSubscriberRemainMinuteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSubscriberRemainMinuteCompleted(this, new checkSubscriberRemainMinuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteSubscriberAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deleteSubscriberAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("deleteSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteSubscriberAccountAsync(string calling, string tag_no, string remark) {
            this.deleteSubscriberAccountAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void deleteSubscriberAccountAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.deleteSubscriberAccountOperationCompleted == null)) {
                this.deleteSubscriberAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSubscriberAccountOperationCompleted);
            }
            this.InvokeAsync("deleteSubscriberAccount", new object[] {
                        calling,
                        tag_no,
                        remark}, this.deleteSubscriberAccountOperationCompleted, userState);
        }
        
        private void OndeleteSubscriberAccountOperationCompleted(object arg) {
            if ((this.deleteSubscriberAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSubscriberAccountCompleted(this, new deleteSubscriberAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateAutoRechargeStatus", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string updateAutoRechargeStatus([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string status, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("updateAutoRechargeStatus", new object[] {
                        userName,
                        status,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateAutoRechargeStatusAsync(string userName, string status, string remark) {
            this.updateAutoRechargeStatusAsync(userName, status, remark, null);
        }
        
        /// <remarks/>
        public void updateAutoRechargeStatusAsync(string userName, string status, string remark, object userState) {
            if ((this.updateAutoRechargeStatusOperationCompleted == null)) {
                this.updateAutoRechargeStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAutoRechargeStatusOperationCompleted);
            }
            this.InvokeAsync("updateAutoRechargeStatus", new object[] {
                        userName,
                        status,
                        remark}, this.updateAutoRechargeStatusOperationCompleted, userState);
        }
        
        private void OnupdateAutoRechargeStatusOperationCompleted(object arg) {
            if ((this.updateAutoRechargeStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAutoRechargeStatusCompleted(this, new updateAutoRechargeStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:activateAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string activateAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("activateAccount", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void activateAccountAsync(string userName, string remark) {
            this.activateAccountAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void activateAccountAsync(string userName, string remark, object userState) {
            if ((this.activateAccountOperationCompleted == null)) {
                this.activateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactivateAccountOperationCompleted);
            }
            this.InvokeAsync("activateAccount", new object[] {
                        userName,
                        remark}, this.activateAccountOperationCompleted, userState);
        }
        
        private void OnactivateAccountOperationCompleted(object arg) {
            if ((this.activateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.activateAccountCompleted(this, new activateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createSip2Subscriber", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createSip2Subscriber([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password) {
            object[] results = this.Invoke("createSip2Subscriber", new object[] {
                        pin,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createSip2SubscriberAsync(string pin, string password) {
            this.createSip2SubscriberAsync(pin, password, null);
        }
        
        /// <remarks/>
        public void createSip2SubscriberAsync(string pin, string password, object userState) {
            if ((this.createSip2SubscriberOperationCompleted == null)) {
                this.createSip2SubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSip2SubscriberOperationCompleted);
            }
            this.InvokeAsync("createSip2Subscriber", new object[] {
                        pin,
                        password}, this.createSip2SubscriberOperationCompleted, userState);
        }
        
        private void OncreateSip2SubscriberOperationCompleted(object arg) {
            if ((this.createSip2SubscriberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSip2SubscriberCompleted(this, new createSip2SubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:changeSubscriberPassword", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string changeSubscriberPassword([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string password, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("changeSubscriberPassword", new object[] {
                        calling,
                        tag_no,
                        password,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void changeSubscriberPasswordAsync(string calling, string tag_no, string password, string remark) {
            this.changeSubscriberPasswordAsync(calling, tag_no, password, remark, null);
        }
        
        /// <remarks/>
        public void changeSubscriberPasswordAsync(string calling, string tag_no, string password, string remark, object userState) {
            if ((this.changeSubscriberPasswordOperationCompleted == null)) {
                this.changeSubscriberPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeSubscriberPasswordOperationCompleted);
            }
            this.InvokeAsync("changeSubscriberPassword", new object[] {
                        calling,
                        tag_no,
                        password,
                        remark}, this.changeSubscriberPasswordOperationCompleted, userState);
        }
        
        private void OnchangeSubscriberPasswordOperationCompleted(object arg) {
            if ((this.changeSubscriberPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeSubscriberPasswordCompleted(this, new changeSubscriberPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteDept", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deleteDept([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dept_code, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("deleteDept", new object[] {
                        userName,
                        dept_code,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDeptAsync(string userName, string dept_code, string remark) {
            this.deleteDeptAsync(userName, dept_code, remark, null);
        }
        
        /// <remarks/>
        public void deleteDeptAsync(string userName, string dept_code, string remark, object userState) {
            if ((this.deleteDeptOperationCompleted == null)) {
                this.deleteDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDeptOperationCompleted);
            }
            this.InvokeAsync("deleteDept", new object[] {
                        userName,
                        dept_code,
                        remark}, this.deleteDeptOperationCompleted, userState);
        }
        
        private void OndeleteDeptOperationCompleted(object arg) {
            if ((this.deleteDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDeptCompleted(this, new deleteDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:removeDid", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string removeDid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string did, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("removeDid", new object[] {
                        did,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void removeDidAsync(string did, string remark) {
            this.removeDidAsync(did, remark, null);
        }
        
        /// <remarks/>
        public void removeDidAsync(string did, string remark, object userState) {
            if ((this.removeDidOperationCompleted == null)) {
                this.removeDidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveDidOperationCompleted);
            }
            this.InvokeAsync("removeDid", new object[] {
                        did,
                        remark}, this.removeDidOperationCompleted, userState);
        }
        
        private void OnremoveDidOperationCompleted(object arg) {
            if ((this.removeDidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeDidCompleted(this, new removeDidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createCallingMap2Ivr", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createCallingMap2Ivr([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string pin, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string reserved1) {
            object[] results = this.Invoke("createCallingMap2Ivr", new object[] {
                        pin,
                        tag_no,
                        reserved1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createCallingMap2IvrAsync(string pin, string tag_no, string reserved1) {
            this.createCallingMap2IvrAsync(pin, tag_no, reserved1, null);
        }
        
        /// <remarks/>
        public void createCallingMap2IvrAsync(string pin, string tag_no, string reserved1, object userState) {
            if ((this.createCallingMap2IvrOperationCompleted == null)) {
                this.createCallingMap2IvrOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCallingMap2IvrOperationCompleted);
            }
            this.InvokeAsync("createCallingMap2Ivr", new object[] {
                        pin,
                        tag_no,
                        reserved1}, this.createCallingMap2IvrOperationCompleted, userState);
        }
        
        private void OncreateCallingMap2IvrOperationCompleted(object arg) {
            if ((this.createCallingMap2IvrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCallingMap2IvrCompleted(this, new createCallingMap2IvrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:callback", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string callback([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string called, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string setupTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int asId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool asIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int flowAsId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool flowAsIdSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("callback", new object[] {
                        userName,
                        calling,
                        called,
                        setupTime,
                        asId,
                        asIdSpecified,
                        flowAsId,
                        flowAsIdSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void callbackAsync(string userName, string calling, string called, string setupTime, int asId, bool asIdSpecified, int flowAsId, bool flowAsIdSpecified, string remark) {
            this.callbackAsync(userName, calling, called, setupTime, asId, asIdSpecified, flowAsId, flowAsIdSpecified, remark, null);
        }
        
        /// <remarks/>
        public void callbackAsync(string userName, string calling, string called, string setupTime, int asId, bool asIdSpecified, int flowAsId, bool flowAsIdSpecified, string remark, object userState) {
            if ((this.callbackOperationCompleted == null)) {
                this.callbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OncallbackOperationCompleted);
            }
            this.InvokeAsync("callback", new object[] {
                        userName,
                        calling,
                        called,
                        setupTime,
                        asId,
                        asIdSpecified,
                        flowAsId,
                        flowAsIdSpecified,
                        remark}, this.callbackOperationCompleted, userState);
        }
        
        private void OncallbackOperationCompleted(object arg) {
            if ((this.callbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.callbackCompleted(this, new callbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:updateDid", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string updateDid([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string did, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string expiryTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string directNum2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("updateDid", new object[] {
                        did,
                        expiryTime,
                        directNum2,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateDidAsync(string did, string expiryTime, string directNum2, string remark) {
            this.updateDidAsync(did, expiryTime, directNum2, remark, null);
        }
        
        /// <remarks/>
        public void updateDidAsync(string did, string expiryTime, string directNum2, string remark, object userState) {
            if ((this.updateDidOperationCompleted == null)) {
                this.updateDidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDidOperationCompleted);
            }
            this.InvokeAsync("updateDid", new object[] {
                        did,
                        expiryTime,
                        directNum2,
                        remark}, this.updateDidOperationCompleted, userState);
        }
        
        private void OnupdateDidOperationCompleted(object arg) {
            if ((this.updateDidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDidCompleted(this, new updateDidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkSubscriberRemainBalance", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkSubscriberRemainBalance([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkSubscriberRemainBalance", new object[] {
                        calling,
                        tag_no,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkSubscriberRemainBalanceAsync(string calling, string tag_no, string remark) {
            this.checkSubscriberRemainBalanceAsync(calling, tag_no, remark, null);
        }
        
        /// <remarks/>
        public void checkSubscriberRemainBalanceAsync(string calling, string tag_no, string remark, object userState) {
            if ((this.checkSubscriberRemainBalanceOperationCompleted == null)) {
                this.checkSubscriberRemainBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSubscriberRemainBalanceOperationCompleted);
            }
            this.InvokeAsync("checkSubscriberRemainBalance", new object[] {
                        calling,
                        tag_no,
                        remark}, this.checkSubscriberRemainBalanceOperationCompleted, userState);
        }
        
        private void OncheckSubscriberRemainBalanceOperationCompleted(object arg) {
            if ((this.checkSubscriberRemainBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSubscriberRemainBalanceCompleted(this, new checkSubscriberRemainBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:checkCallingExists", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string checkCallingExists([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tagNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool tagNoSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("checkCallingExists", new object[] {
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void checkCallingExistsAsync(string calling, int tagNo, bool tagNoSpecified, string remark) {
            this.checkCallingExistsAsync(calling, tagNo, tagNoSpecified, remark, null);
        }
        
        /// <remarks/>
        public void checkCallingExistsAsync(string calling, int tagNo, bool tagNoSpecified, string remark, object userState) {
            if ((this.checkCallingExistsOperationCompleted == null)) {
                this.checkCallingExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckCallingExistsOperationCompleted);
            }
            this.InvokeAsync("checkCallingExists", new object[] {
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark}, this.checkCallingExistsOperationCompleted, userState);
        }
        
        private void OncheckCallingExistsOperationCompleted(object arg) {
            if ((this.checkCallingExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkCallingExistsCompleted(this, new checkCallingExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:deleteAccount", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string deleteAccount([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("deleteAccount", new object[] {
                        userName,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAccountAsync(string userName, string remark) {
            this.deleteAccountAsync(userName, remark, null);
        }
        
        /// <remarks/>
        public void deleteAccountAsync(string userName, string remark, object userState) {
            if ((this.deleteAccountOperationCompleted == null)) {
                this.deleteAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAccountOperationCompleted);
            }
            this.InvokeAsync("deleteAccount", new object[] {
                        userName,
                        remark}, this.deleteAccountOperationCompleted, userState);
        }
        
        private void OndeleteAccountOperationCompleted(object arg) {
            if ((this.deleteAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAccountCompleted(this, new deleteAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createCalling", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createCalling([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int tagNo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool tagNoSpecified, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createCalling", new object[] {
                        userName,
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createCallingAsync(string userName, string calling, int tagNo, bool tagNoSpecified, string remark) {
            this.createCallingAsync(userName, calling, tagNo, tagNoSpecified, remark, null);
        }
        
        /// <remarks/>
        public void createCallingAsync(string userName, string calling, int tagNo, bool tagNoSpecified, string remark, object userState) {
            if ((this.createCallingOperationCompleted == null)) {
                this.createCallingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateCallingOperationCompleted);
            }
            this.InvokeAsync("createCalling", new object[] {
                        userName,
                        calling,
                        tagNo,
                        tagNoSpecified,
                        remark}, this.createCallingOperationCompleted, userState);
        }
        
        private void OncreateCallingOperationCompleted(object arg) {
            if ((this.createCallingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCallingCompleted(this, new createCallingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:createSubscriberDept", RequestNamespace="http://ws.apache.org/axis2", ResponseNamespace="http://ws.apache.org/axis2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string createSubscriberDept([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string calling, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string tag_no, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dept_code, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string dept_name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string remark) {
            object[] results = this.Invoke("createSubscriberDept", new object[] {
                        calling,
                        tag_no,
                        dept_code,
                        dept_name,
                        remark});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createSubscriberDeptAsync(string calling, string tag_no, string dept_code, string dept_name, string remark) {
            this.createSubscriberDeptAsync(calling, tag_no, dept_code, dept_name, remark, null);
        }
        
        /// <remarks/>
        public void createSubscriberDeptAsync(string calling, string tag_no, string dept_code, string dept_name, string remark, object userState) {
            if ((this.createSubscriberDeptOperationCompleted == null)) {
                this.createSubscriberDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSubscriberDeptOperationCompleted);
            }
            this.InvokeAsync("createSubscriberDept", new object[] {
                        calling,
                        tag_no,
                        dept_code,
                        dept_name,
                        remark}, this.createSubscriberDeptOperationCompleted, userState);
        }
        
        private void OncreateSubscriberDeptOperationCompleted(object arg) {
            if ((this.createSubscriberDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSubscriberDeptCompleted(this, new createSubscriberDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void isExistingSubscriberUserCompletedEventHandler(object sender, isExistingSubscriberUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isExistingSubscriberUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isExistingSubscriberUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void suspendAccountCompletedEventHandler(object sender, suspendAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class suspendAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal suspendAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getSubscriberAutoRechargeStatusCompletedEventHandler(object sender, getSubscriberAutoRechargeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSubscriberAutoRechargeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSubscriberAutoRechargeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void subscriberPaymentCompletedEventHandler(object sender, subscriberPaymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscriberPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscriberPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createDeptCompletedEventHandler(object sender, createDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSubscriberAccountCompletedEventHandler(object sender, createSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAutoRechargeStatusCompletedEventHandler(object sender, getAutoRechargeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAutoRechargeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAutoRechargeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createCallingByPinCompletedEventHandler(object sender, createCallingByPinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCallingByPinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCallingByPinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void suspendSubscriberAccountCompletedEventHandler(object sender, suspendSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class suspendSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal suspendSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void userValidationCompletedEventHandler(object sender, userValidationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void rechargeAccountCompletedEventHandler(object sender, rechargeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createDidCompletedEventHandler(object sender, createDidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createDidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createDidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void mainCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getPinFromSubscriberCompletedEventHandler(object sender, getPinFromSubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPinFromSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPinFromSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteAccountByPinCompletedEventHandler(object sender, deleteAccountByPinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAccountByPinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAccountByPinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteSubscriberDeptCompletedEventHandler(object sender, deleteSubscriberDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSubscriberDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSubscriberDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkRemainBalanceCompletedEventHandler(object sender, checkRemainBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkRemainBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkRemainBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createIcfCompletedEventHandler(object sender, createIcfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createIcfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createIcfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void paymentCompletedEventHandler(object sender, paymentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class paymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal paymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void passwordRetrivalCompletedEventHandler(object sender, passwordRetrivalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class passwordRetrivalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal passwordRetrivalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateSubscriberAccountCompletedEventHandler(object sender, updateSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createAccountByLotCompletedEventHandler(object sender, createAccountByLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountByLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountByLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkBasicAccInfoCompletedEventHandler(object sender, checkBasicAccInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkBasicAccInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkBasicAccInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createAccountCompletedEventHandler(object sender, createAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void resumeAccountCompletedEventHandler(object sender, resumeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resumeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resumeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void subscriberRechargeCompletedEventHandler(object sender, subscriberRechargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscriberRechargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscriberRechargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSubscriberIcfCompletedEventHandler(object sender, createSubscriberIcfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSubscriberIcfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSubscriberIcfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void resumeSubscriberAccountCompletedEventHandler(object sender, resumeSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class resumeSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal resumeSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkRemainMinuteCompletedEventHandler(object sender, checkRemainMinuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkRemainMinuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkRemainMinuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSubscriberDidCompletedEventHandler(object sender, createSubscriberDidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSubscriberDidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSubscriberDidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkSubscriberCdrCompletedEventHandler(object sender, checkSubscriberCdrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSubscriberCdrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSubscriberCdrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void rechargeCompletedEventHandler(object sender, rechargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkCdrCompletedEventHandler(object sender, checkCdrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkCdrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkCdrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void rechargeSubscriberAccountCompletedEventHandler(object sender, rechargeSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechargeSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechargeSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateAccountByPinCompletedEventHandler(object sender, updateAccountByPinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAccountByPinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAccountByPinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkSubscriberBasicAccInfoCompletedEventHandler(object sender, checkSubscriberBasicAccInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSubscriberBasicAccInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSubscriberBasicAccInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteCallingCompletedEventHandler(object sender, deleteCallingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCallingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCallingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateAccountCompletedEventHandler(object sender, updateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateSubscriberAutoRechargeStatusCompletedEventHandler(object sender, updateSubscriberAutoRechargeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSubscriberAutoRechargeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSubscriberAutoRechargeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void activateSubscriberAccountCompletedEventHandler(object sender, activateSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activateSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activateSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createAccountByLot2CompletedEventHandler(object sender, createAccountByLot2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountByLot2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountByLot2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSubscriberAccountByLotCompletedEventHandler(object sender, createSubscriberAccountByLotCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSubscriberAccountByLotCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSubscriberAccountByLotCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void removeIcfCompletedEventHandler(object sender, removeIcfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeIcfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeIcfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createAccountByPinCompletedEventHandler(object sender, createAccountByPinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createAccountByPinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createAccountByPinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void callback2CompletedEventHandler(object sender, callback2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callback2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callback2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkSubscriberRemainMinuteCompletedEventHandler(object sender, checkSubscriberRemainMinuteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSubscriberRemainMinuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSubscriberRemainMinuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteSubscriberAccountCompletedEventHandler(object sender, deleteSubscriberAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteSubscriberAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteSubscriberAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateAutoRechargeStatusCompletedEventHandler(object sender, updateAutoRechargeStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateAutoRechargeStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateAutoRechargeStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void activateAccountCompletedEventHandler(object sender, activateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class activateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal activateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSip2SubscriberCompletedEventHandler(object sender, createSip2SubscriberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSip2SubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSip2SubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void changeSubscriberPasswordCompletedEventHandler(object sender, changeSubscriberPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeSubscriberPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeSubscriberPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteDeptCompletedEventHandler(object sender, deleteDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void removeDidCompletedEventHandler(object sender, removeDidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeDidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeDidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createCallingMap2IvrCompletedEventHandler(object sender, createCallingMap2IvrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCallingMap2IvrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCallingMap2IvrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void callbackCompletedEventHandler(object sender, callbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class callbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal callbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateDidCompletedEventHandler(object sender, updateDidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkSubscriberRemainBalanceCompletedEventHandler(object sender, checkSubscriberRemainBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSubscriberRemainBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSubscriberRemainBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void checkCallingExistsCompletedEventHandler(object sender, checkCallingExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkCallingExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkCallingExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void deleteAccountCompletedEventHandler(object sender, deleteAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createCallingCompletedEventHandler(object sender, createCallingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createCallingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createCallingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void createSubscriberDeptCompletedEventHandler(object sender, createSubscriberDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createSubscriberDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createSubscriberDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591